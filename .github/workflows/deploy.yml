name: deploy-haloui-to-hostinger-ftp

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Install at the monorepo root so app + packages share node_modules
      - name: Install dependencies (root)
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install; fi

      # If app depends on @haloui/ui (workspace/file link), build the lib first
      - name: Build UI library (@haloui/ui)
        run: |
          if [ -d "packages/ui" ]; then
            npm --workspace packages/ui run build || echo "ui build skipped"
          fi

      # Build the React app in /app (Webpack)
      - name: Build HaloUI app
        run: npm --workspace app run build

      # Ensure SPA routing on Hostinger (place next to index.html)
      - name: Ensure .htaccess (SPA routing)
        run: |
          mkdir -p app/dist
          cat > app/dist/.htaccess << 'EOF'
          Options -MultiViews
          RewriteEngine On
          RewriteBase /
          RewriteCond %{REQUEST_FILENAME} -f [OR]
          RewriteCond %{REQUEST_FILENAME} -d
          RewriteRule ^ - [L]
          RewriteRule . /index.html [L]
          EOF

      # (Optional) List output for debugging
      - name: List build output
        run: ls -la app/dist && du -sh app/dist || true

      # Deploy via FTP to Hostinger (same action/version & secret names as your Angular example)
      - name: Deploy via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          protocol: ftp
          server:   ${{ secrets.SSH_HOST }}     # e.g. ftp.yourdomain.com
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port:     ${{ secrets.SSH_PORT }}     # usually 21
          local-dir:  app/dist/                    # <-- HaloUI app build output
          server-dir: /public_html/                # or /domains/<sub.yourdomain.com>/public_html/
          dangerous-clean-slate: true
          exclude: |
            **/*.map
            **/node_modules/**
            **/.git**
            **/.DS_Store
